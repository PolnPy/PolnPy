# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    cache_purger:
        class: App\Purger\CachePurger
        arguments:
            - "@doctrine_mongodb"
            - "@app.cache.pool"
        
    cache_controller:
        class: App\Controller\CacheController
        arguments:
            - "@cache_purger"
        public: true
        
    polen_controller:
        class: App\Controller\PolenController
        arguments:
            - "@doctrine_mongodb"
            - "@logger"
            - "@app.cache.pool"
            - "@cache_purger"
        public: true
        
    history_controller:
        class: App\Controller\HistoryController
        arguments:
            - "@doctrine_mongodb"
            - "@logger"
        public: true
    
    prediction_controller:
        class: App\Controller\PredicateController
        arguments:
            - "@doctrine_mongodb"
            - "@logger"
        public: true
        
    db_load_command:
        class: App\Command\DBLoaderCommand
        tags:
            - { name: 'console.command', command: 'app:db:load' }

    db_dump_command:
        class: App\Command\DBDumperCommand
        tags:
            - { name: 'console.command', command: 'app:db:dump' }
    
    create_user_command:
        class: App\Command\UserCreationCommand
        calls:
            - ["setRegistry", ["@doctrine_mongodb"]]
        tags:
            - { name: 'console.command', command: 'app:create:user' }

    list_user_command:
        class: App\Command\UserListCommand
        calls:
            - ["setRegistry", ["@doctrine_mongodb"]]
        tags:
            - { name: 'console.command', command: 'app:list:user' }

    delete_user_command:
        class: App\Command\UserDeleteCommand
        calls:
            - ["setRegistry", ["@doctrine_mongodb"]]
        tags:
            - { name: 'console.command', command: 'app:delete:user' }

    update_user_command:
        class: App\Command\UserUpdateCommand
        calls:
            - ["setRegistry", ["@doctrine_mongodb"]]
        tags:
            - { name: 'console.command', command: 'app:update:user' }
            
    user_provider:
        class: App\Security\ApiKeyUserProvider
        arguments:
            - "@doctrine_mongodb"
        
    pre_auth:
        class: App\Security\ApiKeyAuthenticator

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
